import streamlit as st
import pandas as pd
import joblib
import os

modelo = joblib.load("../4. Models/modelo_entrenado.pkl")


st.set_page_config(page_title="Predicci√≥n de Pr√©stamos", layout="centered")
st.title("üìä Predicci√≥n de Riesgo de Impago")
st.write("Introduce los datos del cliente:")


# === Inputs distribuidos en columnas ===
st.markdown("### üìã Introduce los datos del cliente")

col1, col2 = st.columns(2)

with col1:
    edad = st.slider("Edad del cliente", 18, 75, 30)
    genero = st.selectbox("G√©nero", ['male', 'female'])
    educacion = st.selectbox("Nivel educativo", ['High School', 'Bachelor', 'Master'])
    experiencia = st.slider("Experiencia laboral (a√±os)", 0, 40, 5)
    vivienda = st.selectbox("Tipo de vivienda", ['RENT', 'OWN', 'MORTGAGE', 'OTHER'])

with col2:
    ingreso = st.number_input("Ingresos mensuales (‚Ç¨)", min_value=500, value=2000)
    prestamo = st.number_input("Importe del pr√©stamo (‚Ç¨)", min_value=500, value=5000)
    intencion = st.selectbox("Finalidad del pr√©stamo", ['EDUCATION', 'MEDICAL', 'VENTURE', 'PERSONAL', 'HOMEIMPROVEMENT', 'DEBTCONSOLIDATION'])
    score = st.slider("Puntaje de cr√©dito", 300, 850, 600)
    impagos = st.radio("¬øImpagos anteriores?", ['No', 'Yes'])

# === Evaluaci√≥n del riesgo ===
if st.button("üìä Evaluar riesgo"):
    datos_cliente = pd.DataFrame([{
        'person_age': int(edad),
        'person_gender': str(genero),
        'person_education': str(educacion),
        'person_income': float(ingreso),
        'person_emp_exp': int(experiencia),
        'person_home_ownership': str(vivienda),
        'loan_amnt': float(prestamo),
        'loan_intent': str(intencion),
        'credit_score': int(score),
        'previous_loan_defaults_on_file': str(impagos)
    }])

    # Mostrar los datos ingresados
    st.markdown("### üßæ Datos ingresados")
    st.dataframe(datos_cliente)

    # Evaluaci√≥n del modelo con spinner de carga
    with st.spinner("Evaluando el riesgo..."):
        pred = modelo.predict(datos_cliente)[0]
        prob = modelo.predict_proba(datos_cliente)[0][1]

    # Mostrar resultado
    st.markdown("### üìà Resultado de la evaluaci√≥n")
    if pred == 1:
        st.success(f"‚úÖ **Riesgo Bajo** ‚Äî Probabilidad de pago: {prob:.2%}")
    else:
        st.error(f"‚ö†Ô∏è **Riesgo Alto** ‚Äî Probabilidad de impago: {(1 - prob):.2%}")

# === Footer ===
st.markdown("""
---
Desarrollado con ‚ù§Ô∏è por **Pau Monta√±√©s Pla**  
üìß Contacto: paumontanes@ejemplo.com  
""")

